(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{1314:function(t,e,s){t.exports=s.p+"assets/img/2021-3-12-start-a-containerd-on-riscv-01.23f85feb.jpg"},1755:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"手把手教你搭建基于-risc-v-的-openeuler-系统-部署-runc并运行容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手把手教你搭建基于-risc-v-的-openeuler-系统-部署-runc并运行容器"}},[t._v("#")]),t._v(" 手把手教你搭建基于 RISC-V 的 openEuler 系统，部署 runc并运行容器")]),t._v(" "),a("p",[t._v("RISC-V 是一个基于精简指令集（RISC）原则的开源指令集架构（ISA）。openEuler 在 RISC-V 上进行了一些探索：")]),t._v(" "),a("p",[t._v("[^]: 以下相关信息来自于 https://gitee.com/openeuler/RISC-V")]),t._v(" "),a("ul",[a("li",[t._v("2020年 6 月，openEuler 发布了第一版支持 RISC-V 的文件系统 rootfs 和 kernel 镜像。")]),t._v(" "),a("li",[t._v("2020年 8 月，在 OBS 构建系统开始构建 openEuler RISC-V 软件包。")]),t._v(" "),a("li",[t._v("2020年 9 月，在华为全联接（HC）2020 大会上发布了 openEuler RISC-V，国内首发 RISC-V 版 Linux。")]),t._v(" "),a("li",[t._v("2020年 10 月，中科院成功移植 openEuler RISC-V 到果壳（nutshell）。")]),t._v(" "),a("li",[t._v("2020年 11 月，在 openEuler 镜像仓发布第二版 rootfs 和 kernel 镜像，可以在 qemu 中启动镜像，体验 openEuler RISC-V 移植版。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(1314),alt:"openEuler summit 上展示的运行在果壳芯片上的openEuler RISC-V "}})]),t._v(" "),a("p",[t._v("**openEuler Summit 上展示的运行在果壳芯片上的 openEuler RISC-V **")]),t._v(" "),a("p",[t._v("在容器技术炙手可热的今天，各个技术公司都积极拥抱容器。如何使用 QEMU 模拟器启动 openEuler RISC-V 移植版，并在其中运行容器呢？本文将带你一探究竟。")]),t._v(" "),a("h3",{attrs:{id:"环境要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境要求"}},[t._v("#")]),t._v(" 环境要求")]),t._v(" "),a("ul",[a("li",[t._v("运行环境：Linux")]),t._v(" "),a("li",[t._v('所需文件：openEuler RISC-V 系统镜像，请参见 "获取 openEuler RISC-V 移植版系统镜像"')]),t._v(" "),a("li",[t._v('软件环境：QEMU >= 4.0.0  <=5.0.1，请参见 "获取 openEuler RISC-V 移植版系统镜像"')])]),t._v(" "),a("h4",{attrs:{id:"获取-openeuler-risc-v-移植版系统镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-openeuler-risc-v-移植版系统镜像"}},[t._v("#")]),t._v(" 获取 openEuler RISC-V 移植版系统镜像")]),t._v(" "),a("p",[t._v("在 openEuler 官网可以获得 openEuler RISC-V 移植版发布的最新版本的 openEuler RISC-V 镜像以及 repo 源，名称为 "),a("strong",[t._v("openEuler Preview")])]),t._v(" "),a("div",{staticClass:"language-https extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://repo.openeuler.org/openEuler-preview/RISC-V/Image/\n")])])]),a("p",[t._v("其中的两个文件是启动 openEuler RISC-V 移植版所必需的：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("fw_payload_oe_docker.elf")]),t._v(" 利用 openSBI 将 kernel-5.5 的 image 作为 payload 所制作的用于 QEMU 启动的 image，同时它也增加了 Docker 相关的启动配置。")]),t._v(" "),a("li",[a("strong",[t._v("openEuler-preview.riscv64.qcow2")]),t._v(" openEuler RISC-V移植版的rootfs镜像。")])]),t._v(" "),a("h4",{attrs:{id:"通过-qemu-启动一个-openeuler-risc-v"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-qemu-启动一个-openeuler-risc-v"}},[t._v("#")]),t._v(" 通过 QEMU 启动一个 openEuler RISC-V")]),t._v(" "),a("p",[t._v("首先你需要在你的 Host Linux 环境中有 qemu-system-riscv64 的二进制程序，如果你的 Linux 环境的 repo源中没有提供这个二进制，那么则需要手动从 QEMU 的源码构建出来，具体的构建方式如 QEMU 的官方指导所述：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://wiki.qemu.org/Documentation/Platforms/RISCV",target:"_blank",rel:"noopener noreferrer"}},[t._v("Build QEMU for Platforms/RISCV"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("可以参考以下命令：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git clone https://gitee.com/openeuler/qemu.git\ncd qemu\n./configure --target-list=riscv64-softmmu && make\ncp riscv64-softmmu/qemu-system-riscv64 /bin\n")])])]),a("p",[t._v("QEMU 的启动方式，这里以主机端口转发的方式实现网络功能")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ qemu-system-riscv64 \\\n  -nographic -machine virt \\\n  -smp 8 -m 2G \\\n  -kernel fw_payload_oe_docker.elf \\\n  -drive file=openEuler-preview.riscv64.qcow2,format=qcow2,id=hd0 \\\n  -object rng-random,filename=/dev/urandom,id=rng0 \\\n  -device virtio-rng-device,rng=rng0 \\\n  -device virtio-blk-device,drive=hd0 \\\n  -device virtio-net-device,netdev=usernet \\\n  -netdev user,id=usernet,hostfwd=tcp::12055-:22 \\\n  -append 'root=/dev/vda1 rw console=ttyS0 systemd.default_timeout_start_sec=600 selinux=0 highres=off mem=4096M earlycon'\n")])])]),a("p",[t._v("当系统启动之后，可以通过 ssh 登录 Guest OS，并且在模拟器中应当是可以访问互联网的。系统默认的登录用户名/密码是：root/openEuler12#$")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12055")]),t._v(" root@localhost\n")])])]),a("h3",{attrs:{id:"部署-runc-并运行容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署-runc-并运行容器"}},[t._v("#")]),t._v(" 部署 runc 并运行容器")]),t._v(" "),a("p",[t._v("说明：接下来的操作均在所启动的 openEuler RISC-V 的模拟器运行的 Guest OS 中。")]),t._v(" "),a("h4",{attrs:{id:"安装-runc-软件包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-runc-软件包"}},[t._v("#")]),t._v(" 安装 runc 软件包")]),t._v(" "),a("p",[t._v("openEuler RISC-V repo 源中包含了 runc 软件包，配置 repo 并安装 runc 的参考命令如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum-config-manager --add-repo https://repo.openeuler.org/openEuler-preview/RISC-V/everything/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install docker-runc")]),t._v("\n")])])]),a("h4",{attrs:{id:"准备容器镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备容器镜像"}},[t._v("#")]),t._v(" 准备容器镜像")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("准备工作目录")]),t._v(" "),a("p",[t._v("在正式部署之前，先来准备一个工作目录，比如 mycontainer，本文后续的所有操作都在这个目录下执行。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" mycontainer\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" mycontainer\n")])])])]),t._v(" "),a("li",[a("p",[t._v("准备容器启动镜像")]),t._v(" "),a("p",[t._v("使用自己制作的 rootfs 作为容器启动镜像。假设自制的文件系统中需要 gcc（根据用户自己实际情况确定安装的软件），则参考命令如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" rootfs\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc --installroot"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("/rootfs\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"使用-runc-运行容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-runc-运行容器"}},[t._v("#")]),t._v(" 使用 runc 运行容器")]),t._v(" "),a("p",[t._v("有了 rootfs 之后，我们需要按照 OCI 标准，有一个配置文件"),a("code",[t._v("config.json")]),t._v(" 说明如何运行容器，包括要运行的命令、权限、环境变量等内容，runc 提供了一个命令可以自动帮我们生成该配置文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc spec")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nconfig.json  rootfs\n")])])]),a("p",[t._v("这样就构成了一个 "),a("a",{attrs:{href:"https://github.com/opencontainers/runtime-spec/blob/master/bundle.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("OCI runtime bundle"),a("OutboundLink")],1),t._v(" 的内容，这个 bundle 非常简单，就上面两个内容：config.json 文件和 rootfs 文件系统。"),a("code",[t._v("config.json")]),t._v(" 里面的内容很长，这里就不贴出来了，我们暂时也不会对其进行修改，直接使用这个默认生成的文件。有了这些信息，runc 就能知道怎么运行容器了，我们先来看看简单的方法 "),a("code",[t._v("runc run")]),t._v("（这个命令需要 root 权限），它会创建并启动一个容器：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc run openEuler_container")]),t._v("\nsh-5.0"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nbin  boot  dev\tetc  home  lib\tlib64  media  mnt  opt\tproc  root  run  sbin  srv  sys  tmp  usr  var\nsh-5.0"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# whoami")]),t._v("\nroot\nsh-5.0"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pwd")]),t._v("\n/\nsh-5.0"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo hello container")]),t._v("\nhello container\n")])])]),a("p",[t._v("最后一个参数是容器的名字，需要在主机上保证唯一性。运行之后直接进入到了容器的 "),a("code",[t._v("sh")]),t._v(" 交互界面，但是这个容器并没有配置网络方面的内容，只是有一个默认的 "),a("code",[t._v("lo")]),t._v(" 接口，因此无法和外部通信，但其他功能都正常。")]),t._v(" "),a("p",[t._v("此时，另开一个终端，可以查看运行的容器信息：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc list")]),t._v("\nID                    PID         STATUS      BUNDLE              CREATED                        OWNER\nopenEuler_container   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17318")]),t._v("       running     /home/mycontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-09-03T15:27:25.5978852Z   root\n\n")])])]),a("p",[t._v("启动容器的第二种方式是使用specs生命周期操作，可以更好地创建和管理容器。但是这样会使容器在后台启动，所以需要对 "),a("code",[t._v("config.json")]),t._v(" 进行修改。改动有两处，把 "),a("code",[t._v("terminal")]),t._v(" 的值改成 "),a("code",[t._v("false")]),t._v("，修改 "),a("code",[t._v("args")]),t._v(" 命令行参数为 "),a("code",[t._v("sleep 20")]),t._v("。"),a("code",[t._v("args")]),t._v("的命令只是一个样例，使用中可以根据实际需求进行修改：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"process"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"terminal"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"consoleSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"height"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"width"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"gid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sleep"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20"')]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t···\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("接着用 runc 命令来控制容器的运行，实现各个容器状态的转换")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用 "),a("code",[t._v("create")]),t._v(" 创建容器。此时容器没有运行，只是准备好了所有运行环境，使用 "),a("code",[t._v("list")]),t._v(" 查看，此时容器状态为 "),a("code",[t._v("created")]),t._v("。")]),t._v(" "),a("p",[t._v("假设容器名为 openEuler，参考命令如下：")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc create openEuler")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc list")]),t._v("\nID          PID         STATUS      BUNDLE              CREATED                        OWNER\nopenEuler   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17402")]),t._v("       created     /home/mycontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-09-03T15:37:46.6289281Z   root\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("运行容器，会执行启动命令 "),a("code",[t._v("sleep 20")]),t._v("。使用 "),a("code",[t._v("list")]),t._v(" 查看，此时容器状态为"),a("code",[t._v("running")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc start openEuler")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc list")]),t._v("\nID          PID         STATUS      BUNDLE              CREATED                        OWNER\nopenEuler   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17402")]),t._v("       running     /home/mycontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-09-03T15:37:46.6289281Z   root\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("容器运行 20 秒之后，容器关闭，状态为"),a("code",[t._v("stop")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc list")]),t._v("\nID          PID         STATUS      BUNDLE              CREATED                        OWNER\nopenEuler   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           stopped     /home/mycontainer   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-09-03T15:37:46.6289281Z   root\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("删除容器，容器的信息就不在了。")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc delete openEuler")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@openEuler-RISCV-rare mycontainer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runc list")]),t._v("\nID          PID         STATUS      BUNDLE      CREATED     OWNER\n")])])]),a("p",[t._v("今天的介绍就到这里，更多关于 runc 使用的介绍可以用 "),a("code",[t._v("runc -h")]),t._v(" 查看。后续 openEuler RISC-V 的 Docker 也会使能哦！\n更多关于 openEuler RISC-V 的内容请关注")]),t._v(" "),a("div",{staticClass:"language-https extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://gitee.com/openeuler/RISC-V\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);