(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{1762:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("本文以vmtop的用例为例，介绍如何使用avocado-vt框架来编写用例，执行测试。如果还没完成前置部署，可以前往本系列文章《玩转虚拟化测试框架avocado-vt之安装部署》。")]),t._v(" "),a("h1",{attrs:{id:"用例执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例执行流程"}},[t._v("#")]),t._v(" 用例执行流程")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("获取配置的参数")]),t._v(" "),a("p",[t._v("框架配置好的默认参数和开发者自定义配置的参数")])]),t._v(" "),a("li",[a("p",[t._v("根据配置的参数，准备环境")]),t._v(" "),a("p",[t._v("比如创建或销毁虚拟机实例")])]),t._v(" "),a("li",[a("p",[t._v("执行测试主体")]),t._v(" "),a("p",[t._v("使用前面配置好的参数，进行测试。通常在经过每个测试点时，如果引发了TestFail异常则失败，如果没有引发异常，则通过。")])]),t._v(" "),a("li",[a("p",[t._v("结束阶段，清理环境")]),t._v(" "),a("p",[t._v("根据测试过程中的情况来执行清理环境的操作。包括销毁虚拟机，删除镜像等等。")])])]),t._v(" "),a("h1",{attrs:{id:"笛卡尔配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#笛卡尔配置"}},[t._v("#")]),t._v(" 笛卡尔配置")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Keys and values")]),t._v(" "),a("p",[t._v('Avocado-VT框架用 "key" = "value“ 的方式来定义参数key，如下图中第16行中test_type就是"key", start就是"value"。\n要注意的是，Avocado-VT框架的参数解析是自顶向下的。所以后面的key实际上会覆盖前面的key。其实这也很符合正常的逻辑。')])]),t._v(" "),a("li",[a("p",[t._v("Variants")]),t._v(" "),a("p",[t._v("Variants是参数配置的关键，每个Variant块都可以包含多个同级别的参数。")]),t._v(" "),a("p",[t._v("两个不同的variants间可以组成所有可能的组合。")]),t._v(" "),a("p",[t._v("可以看到下图中，第10行的variants下，包含了positive_test和negative_test两个分支，这两个分支是独立的，分别代表正向测试用例和反向测试用例。在positive_test的分支里面包含了两个variants，第一个variant里的有life_cycle、data_events、cmdline_d、multivmtop、vcpu_hotplug五个元素，第二个variant里有single_vm、multi_vms两个元素。单就这两个同级的variants最大可以得到10个组合。")]),t._v(" "),a("p",[t._v("因为life_cycle下还有一个variant，其中有start、destroy、reboot、pause_resume四个元素。所以理论上最大可以得到8乘2共16个组合。组合出来的名称会形如：positive_test.single_vm.life_cycle.start。")])]),t._v(" "),a("li",[a("p",[t._v("Filters")]),t._v(" "),a("p",[t._v("过滤器，帮助筛选用例组合，常用的过滤器一共两种，分别是only 和 no。下图中，因为第41行的only过滤器的存在。所以multi_vms只会和life_cycle.start组合，不会和其余的7个元素组合。positive_test一共有共9个组合。")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('- vmtop:\n    type = vmtop\n    start_vm = "no"\n    output_file = "vmtop_output"\n    vcpu_max = 8\n    vcpu_cur = 4\n    vcpu_live = 6\n    vm_num = 1\n    only aarch64\n    variants:\n        - positive_test:\n            variants:\n                - life_cycle:\n                    variants:\n                        - start:\n                            test_type = start\n                        - destroy:\n                            test_type = destroy\n                        - reboot:\n                            test_type = reboot\n                        - pause_resume:\n                            test_type = pause\n                - data_events:\n                    test_type = data_events\n                - cmdline_d:\n                    option = "d"\n                    interval = 2\n                - multivmtop:\n                    test_type = multivmtop\n                    vmtopnum = 6\n                - vcpu_hotplug:\n                    test_type = vcpu_hotplug\n                    vcpu_placement = "static"\n            variants:\n                - single_vm:\n                    test_type = single_vm\n                    vm_num = 1\n                - multi_vms:\n                    test_type = multi_vms\n                    vm_num = 3\n                    only life_cycle.start\n        - negative_test:\n            variants:\n                - invalid_cmdline:\n                    option = "x"\n')])])]),a("h1",{attrs:{id:"用例要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例要点"}},[t._v("#")]),t._v(" 用例要点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("依赖库")]),t._v(" "),a("p",[t._v("Python和avocado-vt框架提供了大量的封装好的库。利用好这些库，可以大大提升编写用例的效率，精简用例的代码，提高可读性。")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" logging\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" avocado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" process\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" avocado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" path\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" avocado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" exceptions\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" virttest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils_libguestfs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" lgf\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" virttest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils_test "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" libvirt\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" virttest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("libvirt_xml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" vm_xml\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" virttest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" virsh\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" virttest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" data_dir\n")])])]),a("ul",[a("li",[a("p",[t._v("run函数")]),t._v(" "),a("p",[t._v("run函数是avocado-vt用例必不可缺的部分，我们所要做的就是往run函数中添加测试逻辑，run函数提供的test、params、env三个参数将帮助我们完成对虚拟机实例的大量操作以及对测试点的设计和实现。")]),t._v(" "),a("p",[t._v("test：avocado/avocado/core/test.py\nparams: avocado-vt/virttest/utils_params.py\nenv: avocado-vt/virttest/utils_env.py")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("参数配置")]),t._v(" "),a("p",[t._v("包括获取虚拟机实例，从cfg文件获取预置的参数。这部分类似于定义和初始化变量。")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("vmname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main_vm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"avocado-vt-vm1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vmname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\noutput "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output_file"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\noutput_path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data_dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_tmp_dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\noption "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"option"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ninterval "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"interval"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test_type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvcpu_placement "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vcpu_placement"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvcpu_cur "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vcpu_cur"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvcpu_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vcpu_max"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvcpu_live "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vcpu_live"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvm_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vm_num"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvmtopnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vmtopnum"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("对虚拟机实例的操作最常用的库来源")]),t._v(" "),a("p",[t._v("libvirt: avocado-vt/virttest/libvirt_vm.py\navocado-vt/virttest/virsh.py\nqemu: avocado-vt/virttest/qemu_vm.py")])])]),t._v(" "),a("h1",{attrs:{id:"用例测试点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例测试点"}},[t._v("#")]),t._v(" 用例测试点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在环境上安装vmtop")]),t._v(" "),a("p",[t._v("在hostos上使用“yum install -y vmtop”命令来安装vmtop工具。process.run是python提供的库，这里用于执行shell命令。如果没有成功安装，利用try-except的语法，合理地抛出异常。")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Install vmtop command")]),t._v("\ninstall_cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yum install -y vmtop"')]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("install_cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Find vmtop command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    vmtop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vmtop"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CmdNotFoundError "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" exceptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestSkipError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No vmtop command found - %s"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("virsh.start")]),t._v(" "),a("p",[t._v("利用virsh.start来启动libvirt虚拟机实例。注意libvirt类型的用例需要先用xml文件define一个虚拟机。")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("virsh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vmname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ignore_status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("test.fail")]),t._v(" "),a("p",[t._v("编写一个vmtop_info函数，获取其返回值，根据返回值来判断是否符合我们的预期。如果不符合，进入test.fail，用例执行失败。这就是一个典型的测试点。")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Test vmtop when start vm")]),t._v("\nres "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vmtop_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vmtop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Domains"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" vm_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start failed and the res = %s"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("vmtop_info")]),t._v(" "),a("p",[t._v("该函数使用vmtop命令，将vmtop显示的结果存放到在参数配置阶段就预置好的临时路径output_path里（临时路径的能力是os库提供的，没人希望跑完用例后，产生一堆东西占用磁盘吧，用例执行过程中的临时存放路径很好地解决了这个问题）\n通常单独提取出这样一个函数，而不直接在run函数中测试，是为了能更好的复用。如果要对vmtop显示出的其他信息进行验证，只要在这个vmtop_info函数中去扩充即可。")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vmtop_info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vmtop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Collect and return vmtop infomation\n    """')]),t._v("\n    cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s -b -H -n 1 > %s"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vmtop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ignore_status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" info_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Domains"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"cat %s | grep  Domains | awk '{ print $2 }'\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" output_path\n        res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ignore_status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" info_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cpu"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"cat %s | grep /KVM | awk 'END{ print NR }'\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" output_path\n        res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ignore_status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" info_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cat %s | grep  DID"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" output_path\n        res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ignore_status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout_text\n")])])]),a("ul",[a("li",[a("p",[t._v("环境清理")]),t._v(" "),a("p",[t._v("为了保证每个用例之间不要相互影响，我们需要在用例执行的结尾阶段，清理一下我们的环境。比如清除虚拟机实例，删除磁盘等等")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Destroy vm_clone")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" test_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"multi_vms"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" vm_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" virsh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain_exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm_clone_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" virsh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_alive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm_clone_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    virsh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("destroy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm_clone_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    virsh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove_domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm_clone_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \\\n                                        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--remove-all-storage"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" debug"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_alive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("destroy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    vmxml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("完整的用例源码")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://gitee.com/openeuler/tp-libvirt/tree/openEuler-20.03/libvirt/tests/src/virt_cmd/vmtop.py",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.python文件"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://gitee.com/openeuler/tp-libvirt/tree/openEuler-20.03/libvirt/tests/cfg/virt_cmd/vmtop.cfg",target:"_blank",rel:"noopener noreferrer"}},[t._v("2.cfg文件"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=e.exports}}]);